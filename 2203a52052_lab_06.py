# -*- coding: utf-8 -*-
"""2203A52052_LAB_06.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/143No8iINCY3WM8dyBSEs3RfwScZigE4Q
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, mean_absolute_error

data = pd.read_excel('/content/slr09.xls', engine='xlrd')

X = data[['X']].values
y = data['Y'].values
print(data)

# Data normalization
X_mean = np.mean(X)
X_std = np.std(X)
X_normalized = (X - X_mean) / X_std

y_mean = np.mean(y)
y_std = np.std(y)
y_normalized = (y - y_mean) / y_std

print(y_normalized)

# Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_normalized, y_normalized, test_size=0.1, random_state=42)

# Initialize model parameters
w = 0
b = 0
learning_rate = 0.01
epochs = 1000

# Stochastic Gradient Descent (SGD)
for epoch in range(epochs):
    for i in range(len(X_train)):
        y_pred = w * X_train[i] + b
        dw = (y_pred - y_train[i]) * X_train[i]
        db = (y_pred - y_train[i])
        w = w - learning_rate * dw
        b = b - learning_rate * db

# Predictions
y_train_pred = w * X_train + b
y_test_pred = w * X_test + b

# Denormalize the predictions
y_train_pred = y_train_pred * y_std + y_mean
y_test_pred = y_test_pred * y_std + y_mean

# Evaluate the model
mse_train = mean_squared_error(y_train * y_std + y_mean, y_train_pred)
rmse_train = np.sqrt(mse_train)
mae_train = mean_absolute_error(y_train * y_std + y_mean, y_train_pred)

mse_test = mean_squared_error(y_test * y_std + y_mean, y_test_pred)
rmse_test = np.sqrt(mse_test)
mae_test = mean_absolute_error(y_test * y_std + y_mean, y_test_pred)


print(f"Training MSE: {mse_train}")
print(f"Training RMSE: {rmse_train}")
print(f"Training MAE: {mae_train}")
print(f"Test MSE: {mse_test}")
print(f"Test RMSE: {rmse_test}")
print(f"Test MAE: {mae_test}")